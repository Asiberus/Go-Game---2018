/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./static/js/Start.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./static/js/Start.js":
/*!****************************!*\
  !*** ./static/js/Start.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _core_Controller_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Controller.js */ \"./static/js/core/Controller.js\");\n\n\ndocument.addEventListener('DOMContentLoaded', () => { window.controller = new _core_Controller_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](); });\n\n\n//# sourceURL=webpack:///./static/js/Start.js?");

/***/ }),

/***/ "./static/js/core/Controller.js":
/*!**************************************!*\
  !*** ./static/js/core/Controller.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Kommunicator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Kommunicator.js */ \"./static/js/core/Kommunicator.js\");\n/* harmony import */ var _model_Model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../model/Model.js */ \"./static/js/model/Model.js\");\n/* harmony import */ var _view_View_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../view/View.js */ \"./static/js/view/View.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Utils.js */ \"./static/js/core/Utils.js\");\n/* harmony import */ var _Utils_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_Utils_js__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nclass Controller{\n\n\tconstructor(){\n\t\tthis.kommunicator = {};\n\t\tthis.model = {};\n\t\tthis.view = {};\n\t\tthis.user = {};\n\t\tthis.enemy = {};\n\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis._initKommunicator()\n\t\t\t.then(() => { this._initModel(); })\n\t\t\t.then(() => { this._initView(); })\n\n\t\t\tthis.user = {\n\t\t\t\tname:'',\n\t\t\t\tcolor: '',\n\t\t\t\thasPassed: false\n\t\t\t};\n\t\t\tthis.enemy = {\n\t\t\t\tname:'',\n\t\t\t\tid: '',\n\t\t\t\tcolor: '',\n\t\t\t\thasPassed: false\n\t\t\t};\n\n\t\t\tthis.isInGame = false;\n\t\t\tthis.isInGameRequest = false;\n\t}\n\n\t_initKommunicator(){\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.kommunicator = new _Kommunicator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\t\t\tresolve();\n\t\t})\n\t}\n\n\t_initModel(){\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.model = new _model_Model_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\t\t\tresolve();\n\t\t});\n\t}\n\n\t_initView(){\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.view = new _view_View_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n\t\t\tresolve();\n\t\t})\n\t}\n\n///////////////////////\n\n\tchooseName(event){\n\t\tif(event.keyCode === 13){ //value enter\n\t\t\tlet name = event.target.value;\n\t\t\tif(name !== \"\"){\n\t\t\t\tthis.user.name = name;\n\t\t\t\tthis.kommunicator.initKommunicatorSocket(this.user.name);\n\t\t\t}\n\t\t}\n\t}\n\n\tlaunchApp(){\n\t\tthis.view.launchApp(this.user.name);\n\t}\n\n\tuserNameTaken(){\n\t\tthis.view.userNameTaken();\n\t}\n\n\tgetOppositeColor(color){\n\t\tlet oppositeColor = (color === 'white') ? 'black' : 'white';\n\t\treturn oppositeColor;\n\t}\n\n\n\n\n\t///////////////// Kommunicator function //////////////////\n\n\n\t//////////////////\tChat Functions\t//////////////////\n\n\tsendMessage(message){\n\t\tif(this.isInGame){\n\t\t\tthis.view.addChatMessage('game-message', this.user.name, message);\n\t\t\tlet option = {destinationChannel:this.enemy.id, type:'game_chat_msg'};\n\t\t\tlet data = {userName:this.user.name, message: message};\n\t\t\tthis.kommunicator.sendGameData(option, data);\n\t\t}else{\n\t\t\tlet option = {'group': 1, 'destinationChannel': '', 'type':'lobby_chat_msg'};\n\t\t\tlet data = {'userName':this.user.name, 'message': message};\n\t\t\tthis.kommunicator.sendLobbyData(option, data);\n\t\t}\n\t\tthis.view.cleanChatInput();\n\t}\n\n\treceiveMessage(chatName, data){\n\t\tthis.view.addChatMessage(chatName, data.userName, data.message);\n\t}\n\n\treceiveLobbyConnect(data){\n\t\tlet message = data.userName + ' just connected';\n\t\tthis.view.addChatNotification(message, {chatName:'lobby-message', isBold:false});\n\t\tthis.refreshListUser(data.listUser);\n\t}\n\n\treceiveLobbyDisconnect(data){\n\t\tif(this.isInGameRequest && data.userID === this.enemy.id){\n\t\t\tthis.receiveErrorGameRequest({errorType:'lobby_disconnect', enemyName:data.userName});\n\t\t}else if(this.isInGame && data.userID === this.enemy.id){\n\t\t\tthis.cleanGame();\n\t\t}\n\n\t\tlet message = data.userName + ' just disconnected';\n\t\tthis.view.addChatNotification(message, {chatName:'lobby-message', isBold:false});\n\t\tthis.refreshListUser(data.listUser);\n\t}\n\n\treceiveGameStarted(data){\n\t\tlet message = 'Game Started : ' + data.user1 + ' VS ' + data.user2 + '!';\n\t\tthis.view.addChatNotification(message, {chatName:'lobby-message', isBold:true});\n\t}\n\n\treceiveGameFinished(data){\n\t\tlet message = 'Game ' + data.winner + ' VS ' + data.loser + ' Finished : ';\n\t\tmessage += (data.draw) ? ' Draw!' : data.winner + ' win!';\n\t\tthis.view.addChatNotification(message, {chatName:'lobby-message', isBold:true});\n\t}\n\n\n\n\n\n\n\t//////////////////\tLobby Functions\t//////////////////\n\n\trefreshListUser(listUser){\n\t\tthis.view.refreshListUser(listUser);\n\t}\n\n\t///////\tSend Functions\n\n\tsendGameRequest(){\n\t\tthis.enemy = this.view.getEnemySelected();\n\n\t\tlet option = {group: 0, destinationChannel: this.enemy.id, type: 'game_request'}\n\t\tlet data = {userName: this.user.name};\n\n\t\tthis.kommunicator.sendLobbyData(option, data);\n\t\tthis.view.waitForConfirmation();\n\t\tthis.isInGameRequest = true;\n\t}\n\n\tsendAcceptGameRequest(){\n\t\tlet option = {group: 0, destinationChannel: this.enemy.id, type: 'accept_game_request'};\n\t\tthis.kommunicator.sendLobbyData(option);\n\t}\n\n\tsendErrorGameRequest(errorType){\n\t\tthis.isInGameRequest = false;\n\n\t\tlet option = {group: 0, destinationChannel: this.enemy.id, type: 'error_game_request'};\n\t\tlet data = {errorType: errorType, userName: this.user.name};\n\t\tthis.kommunicator.sendLobbyData(option, data);\n\n\t\tthis.view.removeGameRequest();\n\t}\n\n\t///////\tReceive Functions\n\n\treceiveGameRequest(data){\n\t\tif(this.isInGame){\n\t\t\tlet option = {group: 0, destinationChannel: data.enemyID, type: 'error_game_request'};\n\t\t\tlet dataToSend = {errorType: 'is_in_game', userName: this.user.name};\n\t\t\tthis.kommunicator.sendLobbyData(option, dataToSend);\n\t\t\treturn;\n\t\t}else if(this.isInGameRequest){\n\t\t\tlet option = {group: 0, destinationChannel: data.enemyID, type: 'error_game_request'};\n\t\t\tlet dataToSend = {errorType: 'is_in_game_request', userName: this.user.name};\n\t\t\tthis.kommunicator.sendLobbyData(option, dataToSend);\n\t\t\treturn;\n\t\t}\n\t\tthis.enemy.id = data.enemyID;\n\t\tthis.enemy.name = data.enemyName;\n\t\tthis.view.receiveGameRequest(data.enemyName);\n\t\tthis.isInGameRequest = true;\n\t}\n\n\treceiveAcceptGameRequest(data){\n\t\tthis.kommunicator.sendSystemData('set_bdd_in_game', {isInGame:1});\n\n\t\tlet option = {group: 0, destinationChannel:data.enemyID, type: 'confirm_game_request'};\n\t\tthis.kommunicator.sendLobbyData(option);\n\n\t\tthis.view.receiveAcceptGameRequest(this.enemy.name);\n\n\t\tthis.isInGameRequest = false;\n\t\tthis.isInGame = true;\n\t}\n\n\treceiveConfirmGameRequest(data){\n\t\tthis.kommunicator.sendSystemData('set_bdd_in_game', {isInGame:1});\n\n\t\tlet option = {group: 1, destinationChannel: '', type: 'game_started'};\n\t\tlet dataToSend = {'user1': this.user.name, 'user2': this.enemy.name};\n\t\tthis.kommunicator.sendLobbyData(option, dataToSend);\n\n\t\toption = {group: 1, destinationChannel: '', type: 'refresh_list_user'};\n\t\tthis.kommunicator.sendLobbyData(option);\n\n\t\tthis.view.receiveConfirmGameRequest(this.enemy.name);\n\n\t\tthis.isInGameRequest = false;\n\t\tthis.isInGame = true;\n\t}\n\n\treceiveErrorGameRequest(data){\n\t\tthis.isInGameRequest = false;\n\t\tthis.view.receiveErrorGameRequest(data.errorType, data.enemyName);\n\t\tthis.view.removeGameRequest();\n\t}\n\n\n\n\n\n\n\n\n\t//////////////////\tGame Functions\t//////////////////\n\n\tsetPlayerColor(color){\n\t\tthis.user.color = color;\n\t\tthis.enemy.color = this.getOppositeColor(color);\n\n\t\tlet option = {type: 'set_color', destinationChannel:this.enemy.id};\n\t\tlet data = {color: this.enemy.color};\n\t\tthis.kommunicator.sendGameData(option, data);\n\n\t\tthis.startGame(color, true);\n\t}\n\n\treceiveSetPlayerColor(data){\n\t\tthis.user.color = data.color;\n\t\tthis.enemy.color = this.getOppositeColor(data.color);\n\t\tthis.startGame(data.color, false);\n\t}\n\n\tstartGame(color, playFirst){\n\t\tthis.model.initBoard();\n\t\tthis.view.removeBoardNotification();\n\t\tthis.view.startGame(this.user, this.enemy, playFirst);\n\t}\n\n\taddToken(i, j){\n\t\tthis.model.checkToken(i,j)\n\t\t\t\t\t.then(() => { return this.model.addToken(i,j, this.user.color); })\n\t\t\t\t\t.then(() => { return this.model.updateBoard(i,j); })\n\t\t\t\t\t.then( changes => { this.view.updateBoard(i,j, this.user.color, changes); })\n\t\t\t\t\t.then(() => { this.endOfTurn(); })\n\t\t\t\t\t.catch( errorType => { this.view.addBoardNotification(errorType); });\n\t}\n\n\thoverCell(i,j){\n\t\tlet option = {destinationChannel:this.enemy.id, type: 'hover_cell'};\n\t\tlet data = {i:i, j:j, color:this.user.color};\n\t\tthis.kommunicator.sendGameData(option, data);\n\t}\n\n\treceiveHoverCell(i, j, color){\n\t\tthis.view.showHoverCell(i, j, color);\n\t}\n\n\tendOfTurn(){\n\t\tlet option = {destinationChannel: this.enemy.id, type: 'end_of_turn'};\n\t\tlet data = {newBoard: this.model.getBoardStringify()};\n\t\tthis.kommunicator.sendGameData(option, data);\n\t\tif(!this.enemy.hasPassed){\n\t\t\tthis.view.endOfTurn();\n\t\t}else{\n\t\t\tthis.view.addTokenCounter('player-user');\n\t\t}\n\t}\n\n\treceiveEndOfTurn(data){\n\t\tlet board = JSON.parse(data.newBoard);\n\t\tthis.model.setNewBoard(board);\n\t\tthis.view.setNewBoard(board);\n\t\tif(!this.user.hasPassed){\n\t\t\tthis.view.startOfTurn();\n\t\t}else{\n\t\t\tthis.view.addTokenCounter('player-enemy');\n\t\t}\n\t}\n\n\tuserPassEvent(){\n\t\tthis.view.addBoardNotification('user_pass_confirmation');\n\t}\n\n\tsendUserPass(){\n\t\tthis.user.hasPassed = true;\n\t\tif(!this.enemy.hasPassed){\n\t\t\tlet option = {destinationChannel:this.enemy.id, type:'enemy_pass'};\n\t\t\tthis.kommunicator.sendGameData(option);\n\t\t\tthis.view.userHasPassed();\n\t\t\tthis.view.endOfTurn(true);\n\t\t}else{\n\t\t\tlet optionGame = {destinationChannel:this.enemy.id, type:'end_of_game'};\n\t\t\tthis.kommunicator.sendGameData(optionGame);\n\n\t\t\tthis.getScore();\n\t\t\tthis.view.endOfGame(this.user, this.enemy);\n\n\t\t\tlet optionLobby = {group:1, destinationChannel:'', type:'game_finished'};\n\t\t\tlet data;\n\t\t\tif(this.user.score > this.enemy.score){\n\t\t\t\tdata = {winner:this.user.name, loser:this.enemy.name, draw:0};\n\t\t\t}else if(this.user.score < this.enemy.score){\n\t\t\t\tdata = {winner:this.enemy.name, loser:this.user.name, draw:0};\n\t\t\t}else{\n\t\t\t\tdata = {winner:this.enemy.name, loser:this.user.name, draw:1};\n\t\t\t}\n\t\t\tthis.kommunicator.sendLobbyData(optionLobby, data);\n\t\t}\n\t}\n\n\tgetScore(){\n\t\tthis.user.score = this.model.getScore(this.user.color);\n\t\tthis.enemy.score = this.model.getScore(this.enemy.color);\n\t}\n\n\treceiveEnemyPass(){\n\t\tthis.enemy.hasPassed = true;\n\t\tthis.view.receiveEnemyPass(this.enemy.name);\n\t\tthis.view.startOfTurn(true);\n\t}\n\n\treceiveEndOfGame(){\n\t\tthis.getScore();\n\t\tthis.view.endOfGame(this.user, this.enemy);\n\t}\n\n\tremoveBoardNotification(){\n\t\tthis.view.removeBoardNotification();\n\t}\n\n\tcleanGame(){\n\t\tthis.model.resetBoard();\n\t\tthis.view.cleanGame();\n\n\t\tthis.kommunicator.sendSystemData('set_bdd_in_game', {isInGame:0});\n\n\t\tlet optionLobby = {group: 1, destinationChannel: '', type: 'refresh_list_user'};\n\t\tthis.kommunicator.sendLobbyData(optionLobby);\n\n\t\tthis.isInGame = false;\n\t\tthis.enemy = {};\n\t\tthis.user.score = 0;\n\t\tthis.user.hasPassed = false;\n\t}\n\n\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Controller);\n\n\n//# sourceURL=webpack:///./static/js/core/Controller.js?");

/***/ }),

/***/ "./static/js/core/Kommunicator.js":
/*!****************************************!*\
  !*** ./static/js/core/Kommunicator.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Kommunicator{\n\tconstructor(){\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.kommunicatorSocket = {};\n\t}\n\n\tinitKommunicatorSocket(userName){\n\t\tthis.kommunicatorSocket = new WebSocket(\n\t\t\t'ws://' + window.location.host + '/ws/lobby/'+userName+'/'\n\t\t);\n\n\t\tthis.kommunicatorSocket.onmessage = function(e){\n\t\t\tlet data = JSON.parse(e.data);\n\t\t\teval('this.receive_' + data.target + '(data)');\n\t\t}.bind(this);\n\n\t\tthis.kommunicatorSocket.onclose = function(e){\n\t\t\tconsole.error(e);\n\t    };\n\t}\n\n\t/////////////////////////////////////////////\n\t///////// Receive data Function /////////////\n\t/////////////////////////////////////////////\n\n\t///////// Receive System data ////////////////\n\n\treceive_system(data){\n\t\tswitch(data.type){\n\t\t\tcase 'name_already_taken':\n\t\t\t\tthis.kommunicatorSocket.close(3000);\n\t\t\t\tcontroller.userNameTaken();\n\t\t\t\tbreak;\n\t\t\tcase 'connect_succesful':\n\t\t\t\tcontroller.launchApp();\n\t\t\tdefault:\n\n\t\t}\n\t}\n\n\t///////// Receive Lobby data ////////////////\n\n\treceive_lobby(data){\n\t\tswitch(data.type){\n\t\t\tcase 'notification':\n\t\t\t\tthis.notification(data);\n\t\t\t\tbreak;\n\t\t\tcase 'lobby_chat_msg':\n\t\t\t\tcontroller.receiveMessage('lobby-message', data);\n\t\t\t\tbreak;\n\t\t\tcase 'refresh_list_user':\n\t\t\t\tcontroller.refreshListUser(data.listUser);\n\t\t\t\tbreak;\n\t\t\tcase 'game_request':\n\t\t\t\tcontroller.receiveGameRequest(data);\n\t\t\t\tbreak;\n\t\t\tcase 'accept_game_request':\n\t\t\t\tcontroller.receiveAcceptGameRequest(data);\n\t\t\t\tbreak;\n\t\t\tcase 'confirm_game_request':\n\t\t\t\tcontroller.receiveConfirmGameRequest(data);\n\t\t\t\tbreak;\n\t\t\tcase 'game_started':\n\t\t\t\tcontroller.receiveGameStarted(data);\n\t\t\t\tbreak;\n\t\t\tcase 'game_finished':\n\t\t\t\tcontroller.receiveGameFinished(data);\n\t\t\t\tbreak;\n\t\t\tcase 'error_game_request':\n\t\t\t\tcontroller.receiveErrorGameRequest(data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tnotification(data){\n\t\tswitch(data.notificationType){\n\t\t\tcase 'lobby_connect':\n\t\t\t\tcontroller.receiveLobbyConnect(data);\n\t\t\t\tbreak;\n\t\t\tcase 'lobby_disconnect':\n\t\t\t\tcontroller.receiveLobbyDisconnect(data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t///////// Receive Game data /////////////\n\n\treceive_game(data){\n\t\tswitch(data.type){\n\t\t\tcase 'set_color':\n\t\t\t\tcontroller.receiveSetPlayerColor(data);\n\t\t\t\tbreak;\n\t\t\tcase 'game_chat_msg':\n\t\t\t\tcontroller.receiveMessage('game-message', data);\n\t\t\t\tbreak;\n\t\t\tcase 'end_of_turn':\n\t\t\t\tcontroller.receiveEndOfTurn(data);\n\t\t\t\tbreak;\n\t\t\tcase 'hover_cell':\n\t\t\t\tcontroller.receiveHoverCell(data.i, data.j, data.color);\n\t\t\t\tbreak;\n\t\t\tcase 'enemy_pass':\n\t\t\t\tcontroller.receiveEnemyPass();\n\t\t\t\tbreak;\n\t\t\tcase 'end_of_game':\n\t\t\t\tcontroller.receiveEndOfGame();\n\t\t\t\tbreak;\n\t\t\tcase 'wizz_sound':\n\t\t\t\tcontroller.receiveWizzSound(data);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\n\n\n\t//////////////////////////////////////////\n\t///////// Send data Function /////////////\n\t//////////////////////////////////////////\n\n\tsendSystemData(function_to_call, args){\n\t\tthis.kommunicatorSocket.send(JSON.stringify({\n\t\t\ttarget: 'system',\n\t\t\tfunction_to_call: function_to_call,\n\t\t\targs: JSON.stringify(args)\n\t\t}));\n\t}\n\n\n\tsendLobbyData(option, data={}){\n\t\tthis.kommunicatorSocket.send(JSON.stringify({\n\t\t\ttarget: 'lobby',\n\t\t\tgroup: option.group,\n\t\t\tdestination_channel: option.destinationChannel,\n\t\t\ttype: option.type,\n\t\t\tdata: JSON.stringify(data)\n\t\t}));\n\t}\n\n\tsendGameData(option, data={}){\n\t\tthis.kommunicatorSocket.send(JSON.stringify({\n\t\t\ttarget: 'game',\n\t\t\ttype: option.type,\n\t\t\tdestination_channel: option.destinationChannel,\n\t\t\tdata: JSON.stringify(data)\n\t\t}));\n\t}\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Kommunicator);\n\n\n//# sourceURL=webpack:///./static/js/core/Kommunicator.js?");

/***/ }),

/***/ "./static/js/core/Utils.js":
/*!*********************************!*\
  !*** ./static/js/core/Utils.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//Equals Object function\nObject.prototype.objectEquals = function(object2){\n    for (propName in this) {\n        if(this.hasOwnProperty(propName) != object2.hasOwnProperty(propName)){\n            return false;\n        }else if(typeof this[propName] != typeof object2[propName]){\n            return false;\n        }\n    }\n\n    for(propName in object2) {\n        if(this.hasOwnProperty(propName) != object2.hasOwnProperty(propName)){\n            return false;\n        }else if(typeof this[propName] != typeof object2[propName]){\n            return false;\n        }\n\n        if(!this.hasOwnProperty(propName)){ continue; }\n\n        if(this[propName] instanceof Array && object2[propName] instanceof Array){\n           if(!this[propName].objectEquals(object2[propName])){\n               return false;\n           }\n        }else if(this[propName] instanceof Object && object2[propName] instanceof Object){\n           if(!this[propName].objectEquals(object2[propName])){\n               return false;\n           }\n        }else if(this[propName] != object2[propName]){\n           return false;\n        }\n    }\n    return true;\n}\n\n\nif(Array.prototype.equals)\n    console.warn(\"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n//Equals Array function\nArray.prototype.equals = function (array){\n    if(!array){\n        return false;\n    }\n\n    if(this.length != array.length){\n        return false;\n    }\n\n    for(var i = 0, l=this.length; i < l; i++){\n        if(this[i] instanceof Array && array[i] instanceof Array){\n            if(!this[i].equals(array[i])){\n                return false;\n            }\n        }else if(this[i] instanceof Object && array[i] instanceof Object){\n        \tif(!this[i].objectEquals(array[i])){\n                return false;\n            }\n        }else if (this[i] != array[i]){\n            return false;\n        }\n    }\n    return true;\n}\nObject.defineProperty(Array.prototype, \"equals\", {enumerable: false});\n\n//Copy array function\nif(Array.prototype.copy)\n    console.warn(\"Overriding existing Array.prototype.copy. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.\");\n\nArray.prototype.copy = function copy(){\n  \tvar output, v;\n\tif(Array.isArray(this)){\n\t\toutput = [];\n\t\tfor(let i=0 ; i < this.length ; i++){\n\t\t\tv = this[i];\n\t\t\toutput[i] = (Array.isArray(v) && v !== null) ? v.copy() : v;\n\t\t}\n\t\treturn output;\n\t}else{\n\t\treturn;\n\t}\n}\nObject.defineProperty(Array.prototype, \"copy\", {enumerable: false});\n\n\n//# sourceURL=webpack:///./static/js/core/Utils.js?");

/***/ }),

/***/ "./static/js/model/BoardModel.js":
/*!***************************************!*\
  !*** ./static/js/model/BoardModel.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass BoardModel{\n\tconstructor(){\n\t\tthis._init();\n}\n\n\t_init(){\n\t\tthis.board = [];\n\t\tthis.previousBoard = [];\n\t\tthis.secondPreviousBoard = [];\n\t}\n\n\tinitBoard(){\n\t\tfor(let i = 0 ; i<19 ; i++){\n\t\t\tthis.board[i] = [];\n\t\t\tfor(let j = 0 ; j<19 ; j++){\n\t\t\t\tthis.board[i][j] = 'empty';\n\t\t\t}\n\t\t}\n\t\tthis.previousBoard = this.board.copy();\n\t\tthis.secondPreviousBoard = this.board.copy();\n\t}\n\n\tgetBoardStringify(){\n\t\treturn JSON.stringify(this.board);\n\t}\n\n\tsetNewBoard(newBoard){\n\t\tthis.secondPreviousBoard = this.previousBoard.copy();\n\t\tthis.board = newBoard.copy();\n\t\tthis.previousBoard = this.board.copy();\n\t}\n\n\tresetBoard(){\n\t\tthis.board = [];\n\t\tthis.previousBoard = [];\n\t\tthis.secondPreviousBoard = [];\n\t}\n\n\tgetOppositeColor(color){\n\t\tlet oppositeColor = (color === 'white') ? 'black' : 'white';\n\t\treturn oppositeColor;\n\t}\n\n\tcheckToken(i, j){\n\t\treturn (this.board[i][j] === 'empty');\n\t}\n\n\taddToken(i,j,color){\n\t\tthis.board[i][j] = color;\n\t}\n\n\tcheckTerritory(i,j){\n\t\tlet color = this.board[i][j];\n\t\tlet colorEnemy = this.getOppositeColor(color);\n\t\tlet neighbors = this.getNeighbors(i,j);\n\n\t\t//Add the current cell\n\t\tneighbors = neighbors.concat([{i:i,j:j,color:color}]);\n\n\t\t// Get the chains neighbors\n\t\tlet chains = [];\n\t\tneighbors.filter(n => n.color !== 'empty').forEach(neighbor => {\n\t\t\tchains.push(this.getChain(neighbor.i, neighbor.j, []));\n\t\t});\n\n\t\t//Sort the chains therefore the enemy chains are tested first\n\t\tchains.sort((a,b) => {\n\t\t\tif(a[0].color === colorEnemy && b[0].color === colorEnemy){ return 0; }\n\t\t\tif(a[0].color === colorEnemy && b[0].color !== colorEnemy){ return -1; }\n\t\t\tif(a[0].color !== colorEnemy && b[0].color === colorEnemy){ return 1; }\n\t\t});\n\n\t\t// Test if these chains are free\n\t\tlet tempBoard = this.board.copy();\n\t\tlet changes = [];\n\t\tchains.forEach(chain => {\n\t\t\tif(!chain.some(cell => this.isFree(cell.i, cell.j, tempBoard))){\n\t\t\t\t//Change the temp board\n\t\t\t\tchain.forEach(e => {\n\t\t\t\t\ttempBoard[e.i][e.j] = 'empty';\n\t\t\t\t\tchanges.push(e);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tif(!tempBoard.equals(this.secondPreviousBoard)){\n\t\t\tthis.secondPreviousBoard = this.previousBoard.copy();\n\t\t\tthis.board = tempBoard.copy();\n\t\t\tthis.previousBoard = this.board.copy();\n\t\t\treturn changes;\n\t\t}else{\n\t\t\tthis.board = this.previousBoard.copy();\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tgetChain(i,j, chain){\n\t\tlet color = this.board[i][j];\n\t\tlet neighbors = this.getNeighbors(i,j);\n\n\t\tchain.push({'i':i,'j':j, 'color': this.board[i][j]});\n\t\tneighbors.filter(n => n.color === color).forEach(neighbor => {\n\t\t\tif(!chain.some(e => (e.i === neighbor.i && e.j === neighbor.j))){\n\t\t\t\tchain.concat(this.getChain(neighbor.i, neighbor.j, chain));\n\t\t\t}\n\t\t});\n\t\treturn chain;\n\t}\n\n\tgetNeighbors(i,j){\n\t\tlet neighbors = [];\n\t\tif(i < 18){\n\t\t\tlet bottom = {\n\t\t\t\t'i':i+1,\n\t\t\t\t'j': j,\n\t\t\t\t'color': this.board[i+1][j]\n\t\t\t};\n\t\t\tneighbors.push(bottom);\n\t\t}\n\t\tif(i !== 0){\n\t\t\tlet top = {\n\t\t\t\t'i':i-1,\n\t\t\t\t'j': j,\n\t\t\t\t'color': this.board[i-1][j]\n\t\t\t};\n\t\t\tneighbors.push(top);\n\t\t}\n\t\tif(j < 18){\n\t\t\tlet right = {\n\t\t\t\t'i':i,\n\t\t\t\t'j': j+1,\n\t\t\t\t'color': this.board[i][j+1]\n\t\t\t};\n\t\t\tneighbors.push(right);\n\t\t}\n\t\tif(j !== 0){\n\t\t\tlet left = {\n\t\t\t\t'i':i,\n\t\t\t\t'j': j-1,\n\t\t\t\t'color': this.board[i][j-1]\n\t\t\t};\n\t\t\tneighbors.push(left);\n\t\t}\n\t\treturn neighbors;\n\t}\n\n\tisFree(i,j, board){\n\t\tif(i < 18){\n\t\t\tif(board[(i+1)][j] === 'empty'){ return true; }\n\t\t}\n\t\tif(i !== 0){\n\t\t\tif(board[(i-1)][j] === 'empty'){ return true; }\n\t\t}\n\t\tif(j < 18){\n\t\t\tif(board[i][(j+1)] === 'empty'){ return true; }\n\t\t}\n\t\tif(j !== 0){\n\t\t\tif(board[i][(j-1)] === 'empty'){ return true; }\n\t\t}\n\t\treturn false;\n\t}\n\n\tcountScore(color){\n\t\tlet cells = this.getCellsByColor(color);\n\t\tlet score = cells.length;\n\n\t\tlet territories = [];\n\t\tcells.forEach(cell => {\n\t\t\tlet neighbors = this.getNeighbors(cell.i, cell.j);\n\t\t\tneighbors.filter(n => n.color === 'empty').forEach(neighbor => {\n\t\t\t\tterritories.push(this.getTerritory(neighbor.i, neighbor.j, color, []));\n\t\t\t});\n\t\t});\n\n\t\t// Remove the error\n\t\tterritories = territories.filter(territory => !territory.some(e => e.error));\n\n\t\t// Sort territories\n\t\tterritories.forEach(territory => {\n\t\t\tterritory.sort((a,b) => {\n\t\t\t\tif((a.i < b.i) || (a.i === b.i && a.j < b.j)){ return -1; }\n\t\t\t\tif((a.i > b.i) || (a.i === b.i && a.j > b.j)){ return 1; }\n\t\t\t});\n\t\t});\n\n\t\t// Remove duplicate territories\n\t\tterritories = territories.filter((territory, index, array) => {\n\t\t\tlet territories_stringify = array.map(e => JSON.stringify(e));\n\t\t\treturn (territories_stringify.indexOf(JSON.stringify(territory)) === index);\n\t\t});\n\n\t\t// Add every territories to the score\n\t\tterritories.forEach(territory => {\n\t\t\tscore += territory.length;\n\t\t});\n\n\t\treturn score;\n\t}\n\n\tgetTerritory(i, j, color, territory){\n\t\tlet enemyColor = this.getOppositeColor(color);\n\t\tlet neighbors = this.getNeighbors(i,j);\n\n\t\tif(neighbors.some(neighbor => neighbor.color === enemyColor)){\n\t\t\tterritory.push({error: true});\n\t\t}else{\n\t\t\tterritory.push({i:i, j:j});\n\t\t\tneighbors.filter(n => n.color === 'empty').forEach(neighbor => {\n\t\t\t\tif(!territory.some(e => (e.i === neighbor.i && e.j === neighbor.j))){\n\t\t\t\t\tterritory.concat(this.getTerritory(neighbor.i, neighbor.j, color, territory));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn territory;\n\t}\n\n\tgetCellsByColor(color){\n\t\tlet cells = [];\n\t\tfor(let i=0 ; i<19 ; i++){\n\t\t\tfor(let j = 0 ; j<19 ; j++){\n\t\t\t\tif(this.board[i][j] === color){\n\t\t\t\t\tcells.push({i:i, j:j, color:color});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cells;\n\t}\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BoardModel);\n\n\n//# sourceURL=webpack:///./static/js/model/BoardModel.js?");

/***/ }),

/***/ "./static/js/model/Model.js":
/*!**********************************!*\
  !*** ./static/js/model/Model.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _BoardModel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BoardModel.js */ \"./static/js/model/BoardModel.js\");\n\n\nclass Model{\n\n\tconstructor(){\n\t\tthis.boardModel = {};\n\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.boardModel = new _BoardModel_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\t};\n\n\tinitBoard(){\n\t\tthis.boardModel.initBoard();\n\t}\n\n\tgetBoardStringify(){\n\t\treturn this.boardModel.getBoardStringify();\n\t}\n\n\tsetNewBoard(newBoard){\n\t\tthis.boardModel.setNewBoard(newBoard);\n\t}\n\n\tcheckToken(i,j){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif(this.boardModel.checkToken(i, j)){\n\t\t\t\tresolve();\n\t\t\t}else{\n\t\t\t\treject('');\n\t\t\t}\n\t\t});\n\t}\n\n\taddToken(i,j, color){\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.boardModel.addToken(i,j, color);\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tupdateBoard(i,j){\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet changes = this.boardModel.checkTerritory(i,j);\n\t\t\tif(changes){\n\t\t\t\tresolve(changes);\n\t\t\t}else{\n\t\t\t\treject('error_same_board');\n\t\t\t}\n\t\t});\n\t}\n\n\tgetScore(color){\n\t\treturn this.boardModel.countScore(color);\n\t}\n\n\tresetBoard(){\n\t\tthis.boardModel.resetBoard();\n\t}\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Model);\n\n\n//# sourceURL=webpack:///./static/js/model/Model.js?");

/***/ }),

/***/ "./static/js/view/View.js":
/*!********************************!*\
  !*** ./static/js/view/View.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_Index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Index.js */ \"./static/js/view/components/Index.js\");\n/* harmony import */ var _components_Board_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Board.js */ \"./static/js/view/components/Board.js\");\n/* harmony import */ var _components_Board_Notification_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Board_Notification.js */ \"./static/js/view/components/Board_Notification.js\");\n/* harmony import */ var _components_Lobby_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Lobby.js */ \"./static/js/view/components/Lobby.js\");\n/* harmony import */ var _components_Chat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/Chat.js */ \"./static/js/view/components/Chat.js\");\n/* harmony import */ var _components_Player_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/Player.js */ \"./static/js/view/components/Player.js\");\n\n\n\n\n\n\n\nclass View{\n\tconstructor(){\n\t\tthis.index = {};\n\t\tthis.board = {};\n\t\tthis.boardNotification = {};\n\t\tthis.lobby = {};\n\t\tthis.chat = {};\n\t\tthis.player = {};\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.index = new _components_Index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\t\tthis.board = new _components_Board_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n\t\tthis.boardNotification = new _components_Board_Notification_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n\t\tthis.lobby = new _components_Lobby_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n\t\tthis.chat = new _components_Chat_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\n\t\tthis.player = new _components_Player_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n\t}\n\n\tlaunchApp(name){\n\t\tthis.index.launchApp();\n\t\tdocument.getElementById('user-name').textContent = name;\n\t}\n\n\tuserNameTaken(){\n\t\tthis.index.userNameTaken();\n\t}\n\n\n\t////////////////////////\tChat Functions\n\n\tcleanChatInput(){\n\t\tthis.chat.cleanChatInput();\n\t}\n\n\taddChatMessage(chatName, userName, message){\n\t\tthis.chat.addMessage(chatName, userName, message);\n\t}\n\n\taddChatNotification(message, option){\n\t\tthis.chat.addNotification(message, option);\n\t}\n\n\treceiveErrorGameRequest(errorType, enemyName){\n\t\tlet message;\n\t\tswitch(errorType){\n\t\t\tcase 'cancel':\n\t\t\t\tmessage = enemyName + ' cancel his game invitation...';\n\t\t\t\tbreak;\n\t\t\tcase 'decline':\n\t\t\t\tmessage = enemyName + ' decline your game invitation...';\n\t\t\t\tbreak;\n\t\t\tcase 'is_in_game':\n\t\t\t\tmessage = enemyName + ' is already in a game.';\n\t\t\t\tbreak;\n\t\t\tcase 'is_in_game_request':\n\t\t\t\tmessage = enemyName + ' is already in a game invitation.';\n\t\t\t\tbreak;\n\t\t\tcase 'enemy_disconnect':\n\t\t\t\tmessage = enemyName + ' has been disconnected...';\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.chat.addNotification(message, {chatName:'lobby-message', isBold:true});\n\t}\n\n\n\n\n\n\n\t////////////////////////\tLobby Functions\n\n\twaitForConfirmation(){\n\t\tthis.lobby.waitForConfirmation();\n\t}\n\n\treceiveGameRequest(enemyName){\n\t\tlet message = enemyName + ' send you a game invitation!';\n\t\tthis.chat.addNotification(message, {chatName:'lobby-message', isBold:true});\n\t\tthis.lobby.receiveGameRequest(enemyName);\n\t}\n\n\treceiveAcceptGameRequest(enemyName){\n\t\tthis.lobby.removeLobby();\n\t\tthis.chat.setChatContainer('game', enemyName);\n\t\tthis.chat.addNotification('Game started!', {chatName:'game-message', isBold:true});\n\t\tthis.addBoardNotification('wait_for_color_choice', enemyName);\n\t}\n\n\treceiveConfirmGameRequest(enemyName){\n\t\tthis.lobby.removeLobby();\n\t\tthis.chat.setChatContainer('game', enemyName);\n\t\tthis.chat.addNotification('Game started!', {chatName:'game-message', isBold:true});\n\t\tthis.addBoardNotification('choice_of_color');\n\t}\n\n\trefreshListUser(listUser){\n\t\tthis.lobby.refreshListUser(listUser);\n\t}\n\n\tremoveGameRequest(){\n\t\tthis.lobby.removeGameRequest();\n\t}\n\n\tgetEnemySelected(){\n\t\treturn this.lobby.getEnemySelected();\n\t}\n\n\n\n\n\n\t////////////////////////\tGame Functions\n\n\tstartGame(user, enemy, playFirst){\n\t\tthis.board.setPlayerColor(user.color);\n\t\tthis.showPlayerContainer(user, enemy, playFirst);\n\t\tthis.board.setIsPlaying(playFirst);\n\t\tif(playFirst){\n\t\t\tthis.board.addCellsEvent();\n\t\t}\n\t}\n\n\tshowPlayerContainer(user, enemy, playFirst){\n\t\tthis.player.setPlayer('player-user', user.name, user.color, playFirst);\n\t\tthis.player.setPlayer('player-enemy', enemy.name, enemy.color, !playFirst);\n\t\tthis.player.showPlayerContainer(true);\n\t}\n\n\tstartOfTurn(hasPassed=false){\n\t\tthis.player.setIsPlaying('player-user', true);\n\t\tthis.player.setIsPlaying('player-enemy', false);\n\t\tthis.board.setIsPlaying(true);\n\t\tthis.board.hideHoverCells();\n\t\tthis.board.addCellsEvent();\n\t\tif(!hasPassed){\n\t\t\tthis.player.addTokenCounter('player-enemy');\n\t\t}\n\t}\n\n\tendOfTurn(hasPassed=false){\n\t\tthis.player.setIsPlaying('player-user', false);\n\t\tthis.player.setIsPlaying('player-enemy', true);\n\t\tthis.board.setIsPlaying(false);\n\t\tthis.board.removeCellsEvent();\n\t\tif(!hasPassed){\n\t\t\tthis.player.addTokenCounter('player-user');\n\t\t}\n\t}\n\n\tupdateBoard(i, j, color, changes){\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.board.addToken(i,j, color);\n\t\t\tthis.board.updateBoard(changes);\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tshowHoverCell(i, j, color){\n\t\tthis.board.showHoverCell(i, j, color);\n\t}\n\n\tsetNewBoard(board){\n\t\tthis.board.setNewBoard(board);\n\t}\n\n\taddTokenCounter(playerID){\n\t\tthis.player.addTokenCounter(playerID);\n\t}\n\n\tendOfGame(user, enemy){\n\t\tthis.player.togglePassButton(false);\n\t\tthis.player.setPassBtnText('You have passed!');\n\t\tthis.chat.addNotification('Game Finished!', {chatName:'game-message', isBold:true});\n\t\tthis.boardNotification.addFinishedGameNotification(user, enemy);\n\t}\n\n\tuserHasPassed(){\n\t\tthis.boardNotification.show(false);\n\t\tthis.player.setPassBtnText('You have passed');\n\t\tthis.chat.addNotification('You have passed...', {chatName:'game-message', isBold:true});\n\t}\n\n\treceiveEnemyPass(enemyName){\n\t\tthis.player.setEnemyPassed(true);\n\t\tthis.addBoardNotification('enemy_passed', enemyName);\n\n\t\tlet message = enemyName + ' has passed!';\n\t\tthis.chat.addNotification(message, {chatName:'game-message', isBold:true});\n\n\t}\n\n\tcleanGame(){\n\t\tthis.player.resetPlayerContainer();\n\n\t\tthis.chat.cleanChatInput();\n\t\tthis.chat.cleanGameChatMessage();\n\t\tthis.chat.setChatContainer('lobby', 'Lobby');\n\n\t\tthis.boardNotification.resetBoardNotification();\n\n\t\tthis.board.resetBoard();\n\n\t\tthis.lobby.showLobby();\n\t}\n\n\n\n\n\t////////////////////////\tBoard Notification Functions\n\n\taddBoardNotification(notification_type, enemyName=''){\n\t\tlet message;\n\t\tswitch(notification_type){\n\t\t\tcase 'choice_of_color':\n\t\t\t\tmessage = 'Choose your color!';\n\t\t\t\tthis.boardNotification.addBoardNotification(message, {action:'stop', button_display:'white-black', permanent:true});\n\t\t\t\tbreak;\n\t\t\tcase 'wait_for_color_choice':\n\t\t\t\tmessage = enemyName + ' choose his color...';\n\t\t\t\tthis.boardNotification.addBoardNotification(message, {action:'move', button_display:'none', permanent:true});\n\t\t\t\tbreak;\n\t\t\tcase 'user_pass_confirmation':\n\t\t\t\tmessage = 'Are you sure you want to pass ?';\n\t\t\t\tthis.boardNotification.addBoardNotification(message, {action:'stop', button_display:'confirm-cancel', permanent:true});\n\t\t\t\tbreak;\n\t\t\tcase 'enemy_passed':\n\t\t\t\tmessage = enemyName + ' has passed!';\n\t\t\t\tthis.boardNotification.addBoardNotification(message, {action:'move', button_display:'none', permanent:false});\n\t\t\t\tbreak;\n\t\t\tcase 'error_surrounded':\n\t\t\t\tmessage = 'This move is not very smart...';\n\t\t\t\tthis.boardNotification.addBoardNotification(message, {action:'move', button_display:'none', permanent:false});\n\t\t\t\tbreak;\n\t\t\tcase 'error_same_board':\n\t\t\t\tmessage = 'The board will be the same as before...';\n\t\t\t\tthis.boardNotification.addBoardNotification(message, {action: 'move', button_display:'none', permanent:false});\n\t\t\t\tbreak;\n\t\t\tcase 'end_of_game':\n\t\t\t\tmessage = 'Game Finished!';\n\t\t\t\tthis.boardNotification.addBoardNotification(message, {action:'stop', button_display:'none', permanent:true});\n\t\t}\n\t}\n\n\tremoveBoardNotification(){\n\t\tthis.boardNotification.show(false);\n\t}\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (View);\n\n\n//# sourceURL=webpack:///./static/js/view/View.js?");

/***/ }),

/***/ "./static/js/view/components/Board.js":
/*!********************************************!*\
  !*** ./static/js/view/components/Board.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Board{\n\n\tconstructor(){\n\t\tthis.board = {};\n\n\t\tthis._init();\n\t}\n\n\t_init(){\n\n\t\tthis.board = document.getElementById('board-container');\n\t\tthis._initBoardGame();\n\n\t}\n\n\t_initBoardGame(){\n\t\tthis.board.setAttribute('player', '');\n\t\tfor(let i = 0 ; i<19 ; i++){\n\t\t\tlet row = document.createElement('div');\n\t\t\trow.classList.add('board-row');\n\t\t\tfor(let j=0 ; j<19 ; j++){\n\t\t\t\tlet cell = document.createElement('div')\n\t\t\t\tcell.classList.add('cell');\n\t\t\t\tcell.classList.add('empty');\n\t\t\t\tcell.id = 'cell-'+i+'-'+j;\n\t\t\t\tcell.setAttribute('i', i);\n\t\t\t\tcell.setAttribute('j', j);\n\t\t\t\trow.appendChild(cell);\n\t\t\t}\n\t\t\tthis.board.appendChild(row);\n\t\t}\n\t}\n\n\t_addToken(e){\n\t\tlet cell = e.target;\n\t\tlet i = parseInt(cell.getAttribute('i'));\n\t\tlet j = parseInt(cell.getAttribute('j'));\n\t\tcontroller.addToken(i,j);\n\t}\n\n\t_hoverCell(e){\n\t\tlet cell = e.target;\n\t\tlet i = parseInt(cell.getAttribute('i'));\n\t\tlet j = parseInt(cell.getAttribute('j'));\n\t\tcontroller.hoverCell(i,j);\n\t}\n\n\taddToken(i,j, color){\n\t\tlet cell = document.getElementById('cell-'+i+'-'+j);\n\t\tcell.classList.remove('empty');\n\t\tcell.classList.add(color);\n\t}\n\n\tupdateBoard(changes){\n\t\tlet i = 0;\n\t\tchanges.forEach(change => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tlet cell = document.getElementById('cell-'+change.i+'-'+change.j);\n\t\t\t\tcell.classList.remove('white');\n\t\t\t\tcell.classList.remove('black');\n\t\t\t\tcell.classList.add('empty');\n\t\t\t}, i);\n\t\t\ti += 50;\n\t\t})\n\t}\n\n\tshowHoverCell(i, j, color){\n\t\tthis.hideHoverCells();\n\t\tlet cell = document.getElementById('cell-'+i+'-'+j);\n\t\tcell.classList.add('hover');\n\t\tcell.setAttribute('hover_color', color);\n\t}\n\n\thideHoverCells(){\n\t\tfor(let cell of document.getElementsByClassName('hover')){\n\t\t\tcell.classList.remove('hover');\n\t\t\tcell.setAttribute('hover_color', '');\n\t\t}\n\t}\n\n\taddCellsEvent(){\n\t\tlet cells = document.getElementsByClassName('cell empty');\n\t\tfor(let cell of cells){\n\t\t\tcell.addEventListener('click', this._addToken);\n\t\t\tcell.addEventListener('mouseover', this._hoverCell);\n\t\t}\n\t}\n\n\tremoveCellsEvent(){\n\t\tlet cells = document.getElementsByClassName('cell');\n\t\tfor(let cell of cells){\n\t\t\tcell.removeEventListener('click', this._addToken);\n\t\t\tcell.removeEventListener('mouseover', this._hoverCell);\n\t\t}\n\t}\n\n\tsetPlayerColor(color){\n\t\tthis.board.setAttribute('player', color);\n\t}\n\n\tsetIsPlaying(isPlaying){\n\t\tthis.board.setAttribute('isPlaying', isPlaying.toString());\n\t}\n\n\tsetNewBoard(board){\n\t\tfor(let i = 0 ; i < 19 ; i++){\n\t\t\tfor(let j=0 ; j < 19 ; j++){\n\t\t\t\tlet cell = document.getElementById('cell-'+i+'-'+j);\n\t\t\t\tcell.classList.remove('empty');\n\t\t\t\tcell.classList.remove('black');\n\t\t\t\tcell.classList.remove('white');\n\t\t\t\tcell.classList.add(board[i][j]);\n\t\t\t}\n\t\t}\n\t}\n\n\tresetBoard(){\n\t\tthis.setPlayerColor('');\n\t\tthis.setIsPlaying(false);\n\n\t\tfor(let i = 0 ; i < 19 ; i++){\n\t\t\tfor(let j = 0 ; j < 19 ; j++){\n\t\t\t\tlet cell = document.getElementById('cell-'+i+'-'+j);\n\t\t\t\tcell.classList.remove('black');\n\t\t\t\tcell.classList.remove('white');\n\t\t\t\tcell.classList.add('empty');\n\t\t\t\tcell.removeEventListener('click', this._addToken);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board);\n\n\n//# sourceURL=webpack:///./static/js/view/components/Board.js?");

/***/ }),

/***/ "./static/js/view/components/Board_Notification.js":
/*!*********************************************************!*\
  !*** ./static/js/view/components/Board_Notification.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Board_Notification{\n\tconstructor(){\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.boardNotificationContainer = document.getElementById('board-notification-container');\n\t\tthis.baordNotification = document.getElementById('board-notification');\n\t\tthis.notificationMessage = document.getElementById('board-notification-message');\n\n\t\tthis.notificationCounter = document.getElementById('board-notification-counter');\n\t\tthis.userCounter = document.getElementById('bord-notification-counter-user');\n\t\tthis.enemyCounter = document.getElementById('bord-notification-counter-enemy');\n\n\t\tthis.btnContainer = document.getElementById('board-notification-btn-container');\n\t\tthis.whiteBtn = document.getElementById('notification-white-btn');\n\t\tthis.blackBtn = document.getElementById('notification-black-btn');\n\t\tthis.confirmBtn = document.getElementById('notification-confirm-btn');\n\t\tthis.cancelBtn = document.getElementById('notification-cancel-btn');\n\t\tthis.lobbyBtn = document.getElementById('notification-lobby-btn');\n\n\n\t\tthis.whiteBtn.addEventListener('click', function(){ controller.setPlayerColor('white'); });\n\t\tthis.blackBtn.addEventListener('click', function(){ controller.setPlayerColor('black'); });\n\t\tthis.confirmBtn.addEventListener('click', function(){ controller.sendUserPass(); });\n\t\tthis.cancelBtn.addEventListener('click', function(){ controller.removeBoardNotification(); });\n\t\tthis.lobbyBtn.addEventListener('click', function(){ controller.cleanGame(); });\n\t}\n\n\tshow(show){\n\t\tif(show){\n\t\t\tthis.boardNotificationContainer.style.display = 'flex';\n\t\t\tthis.boardNotificationContainer.setAttribute('show', 'true');\n\t\t\tthis.baordNotification.setAttribute('show', 'true');\n\t\t}else{\n\t\t\tthis.boardNotificationContainer.setAttribute('show', 'false');\n\t\t\tthis.baordNotification.setAttribute('show', 'false');\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.boardNotificationContainer.style.display = 'none';\n\t\t\t}, 300);\n\t\t}\n\t}\n\n\taddBoardNotification(message, option){\n\t\t//option; animation action, display btn, permanent\n\t\tthis.notificationMessage.textContent = message;\n\t\tthis.notificationMessage.setAttribute('action', option.action);\n\t\tthis.btnContainer.setAttribute('button_display', option.button_display);\n\n\t\tthis.show(true);\n\t\tif(!option.permanent){\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.show(false);\n\t\t\t}, 2000);\n\t\t}\n\t}\n\n\taddFinishedGameNotification(user, enemy){\n\t\tif(this.boardNotificationContainer.getAttribute('show') === 'true'){\n\t\t\tthis.baordNotification.setAttribute('show', 'false');\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setFinishedGameNotification(user, enemy);\n\t\t\t\tthis.baordNotification.setAttribute('show', 'true');\n\t\t\t}, 300);\n\t\t}else{\n\t\t\tthis.setFinishedGameNotification(user, enemy);\n\t\t\tthis.show(true);\n\t\t}\n\t}\n\n\tsetFinishedGameNotification(user, enemy){\n\t\tthis.boardNotificationContainer.setAttribute('gameFinished', 'true');\n\t\tthis.notificationCounter.style.display = 'flex';\n\t\tthis.notificationMessage.textContent = 'Game Finished!';\n\t\tthis.notificationMessage.setAttribute('action', 'stop');\n\t\tthis.btnContainer.setAttribute('button_display', 'back-to-lobby');\n\n\t\tthis.userCounter.querySelector('.player-color').setAttribute('color', user.color);\n\t\tthis.userCounter.querySelector('.player-name').textContent = user.name;\n\n\t\tthis.enemyCounter.querySelector('.player-color').setAttribute('color', enemy.color);\n\t\tthis.enemyCounter.querySelector('.player-name').textContent = enemy.name;\n\n\t\tthis.animateScore(user.score, enemy.score);\n\t}\n\n\tanimateScore(userScore, enemyScore){\n\t\tlet userScoreCounter = this.userCounter.querySelector('.player-score');\n\t\tlet enemyScoreCounter = this.enemyCounter.querySelector('.player-score');\n\t\tlet userDisplay = 0, enemyDisplay = 0;\n\n\t\tlet animationUser = setInterval(() => {\n\t\t\tif(userDisplay === userScore){\n\t\t\t\tclearInterval(animationUser);\n\t\t\t}else{\n\t\t\t\tuserDisplay++;\n\t\t\t\tuserScoreCounter.textContent = userDisplay;\n\t\t\t}\n\t\t}, 1);\n\n\t\tlet animationEnemy = setInterval(() => {\n\t\t\tif(enemyDisplay === enemyScore){\n\t\t\t\tclearInterval(animationEnemy);\n\t\t\t}else{\n\t\t\t\tenemyDisplay++;\n\t\t\t\tenemyScoreCounter.textContent = enemyDisplay;\n\t\t\t}\n\t\t}, 1);\n\t}\n\n\t// Reset Function\n\n\tresetBoardNotification(){\n\t\tthis.boardNotificationContainer.setAttribute('gameFinished', 'false');\n\t\tthis.notificationCounter.style.display = 'none';\n\n\t\tthis.notificationMessage.textContent = '';\n\t\tthis.notificationMessage.setAttribute('action', 'stop');\n\t\tthis.btnContainer.setAttribute('button_display', 'none');\n\n\t\tlet playerCounter = document.getElementsByClassName('player-counter-container');\n\t\tfor(let c of playerCounter){\n\t\t\tc.querySelector('.player-color').setAttribute('color', '');\n\t\t\tc.querySelector('.player-name').textContent = '';\n\t\t\tc.querySelector('.player-score').textContent = '0';\n\t\t}\n\n\t\tthis.show(false);\n\t}\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Board_Notification);\n\n\n//# sourceURL=webpack:///./static/js/view/components/Board_Notification.js?");

/***/ }),

/***/ "./static/js/view/components/Chat.js":
/*!*******************************************!*\
  !*** ./static/js/view/components/Chat.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Chat{\n\tconstructor(){\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.chatContainer = document.getElementById('chat-container');\n\t\tthis.chatName = document.getElementById('chat-title-info');\n\n\t\tthis.input = document.querySelector('#chat-input input');\n\t\tthis.sendBtn = document.getElementById('send-button');\n\n\t\tthis.sendBtn.addEventListener('click', this._sendLobbyMessage.bind(this));\n\n\t\tthis.input.addEventListener('keyup', e => {\n\t\t\tif(e.keyCode === 13){ // value enter\n\t\t\t\tthis.sendBtn.click();\n\t\t\t}\n\t\t});\n\n\t}\n\n\t_sendLobbyMessage(){\n\t\tlet message = this.input.value;\n\t\tif(!/^ *$/.test(message)){\n\t\t\tcontroller.sendMessage(message);\n\t\t}\n\t}\n\n\tsetChatContainer(containerName, chatName){\n\t\tthis.chatContainer.setAttribute('msg-container', containerName);\n\t\tthis.chatName.textContent = chatName;\n\t}\n\n\tcleanChatInput(){\n\t\tthis.input.value = '';\n\t}\n\n\tcleanGameChatMessage(){\n\t\tdocument.getElementById('game-message').innerHTML = '';\n\t}\n\n\taddMessage(chatName, userName, userMessage){\n\t\tlet wrapper = document.createElement('div');\n\t\tlet message = document.createElement('span');\n\t\tlet name = document.createElement('span');\n\n\t\twrapper.classList.add('message');\n\t\tname.classList.add('name-user');\n\t\tname.textContent = userName;\n\t\tmessage.classList.add('message-span');\n\t\tmessage.textContent = userMessage;\n\n\t\twrapper.appendChild(name);\n\t\twrapper.appendChild(message);\n\t\tlet chatContainer = document.getElementById(chatName);\n\t\tchatContainer.appendChild(wrapper);\n\t\tchatContainer.scrollTop = chatContainer.scrollHeight;\n\t}\n\n\taddNotification(message, option){\n\t\t//OPTION: chatName, isBold\n\t\tlet wrapper = document.createElement('div');\n\t\tlet notification = document.createElement('span');\n\n\t\twrapper.classList.add('notification');\n\t\tif(option.isBold){\n\t\t\twrapper.classList.add('bold');\n\t\t}\n\t\tnotification.textContent = message;\n\n\t\twrapper.appendChild(notification);\n\t\tlet chatContainer = document.getElementById(option.chatName);\n\t\tchatContainer.appendChild(wrapper);\n\t\tchatContainer.scrollTop = chatContainer.scrollHeight;\n\t}\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Chat);\n\n\n//# sourceURL=webpack:///./static/js/view/components/Chat.js?");

/***/ }),

/***/ "./static/js/view/components/Index.js":
/*!********************************************!*\
  !*** ./static/js/view/components/Index.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Index{\n\tconstructor(){\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.indexBck = document.getElementById('index-background');\n\t\tthis.indexContainer = document.getElementById('index-container');\n\t\tthis.indexTitle = document.getElementById('index-title');\n\t\tthis.indexInput = document.getElementById('index-input');\n\t\tthis.indexInputError = document.getElementById('index-input-error');\n\n\t\tthis.indexInput.addEventListener('keyup', this._inputKeyup.bind(this));\n\n\t\tthis.indexInput.focus();\n\t}\n\n\t_inputKeyup(e){\n\t\tthis.indexInputError.setAttribute('error', 'false');\n\t\tcontroller.chooseName(e);\n\t}\n\n\tlaunchApp(){\n\t\tthis.indexBck.setAttribute('show', 'false');\n\t\tsetTimeout(() => {\n\t\t\tthis.indexBck.style.display = 'none';\n\t\t}, 300);\n\t}\n\n\tuserNameTaken(){\n\t\tthis.indexInputError.setAttribute('error', 'true');\n\t}\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Index);\n\n\n//# sourceURL=webpack:///./static/js/view/components/Index.js?");

/***/ }),

/***/ "./static/js/view/components/Lobby.js":
/*!********************************************!*\
  !*** ./static/js/view/components/Lobby.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Lobby{\n\tconstructor(){\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.lobbyContainer = document.getElementById('lobby-container');\n\t\tthis.lobbySelectorContainer = document.getElementById('lobby-selector-container');\n\t\tthis.listUserContainer = document.getElementById('list-user-container');\n\t\tthis.listUser = document.getElementById('list-user');\n\n\t\tthis.lobbyNotification = document.getElementById('lobby-notification');\n\n\t\tthis.lobbyTitle = document.getElementById('lobby-title');\n\n\t\tthis.btnContainer = document.getElementById('btn-container');\n\t\tthis.playBtn = document.getElementById('play-btn');\n\t\tthis.cancelBtn = document.getElementById('cancel-btn');\n\t\tthis.acceptBtn = document.getElementById('accept-btn');\n\t\tthis.declineBtn = document.getElementById('decline-btn');\n\n\t\tthis.lobbyTitle.addEventListener('click', function(){ this._extend_list_user() }.bind(this));\n\t\tthis.playBtn.addEventListener('click', function(){ controller.sendGameRequest(); });\n\t\tthis.cancelBtn.addEventListener('click', function(){ controller.sendErrorGameRequest('cancel'); });\n\t\tthis.acceptBtn.addEventListener('click', function(){ controller.sendAcceptGameRequest(); });\n\t\tthis.declineBtn.addEventListener('click', function(){ controller.sendErrorGameRequest('decline'); });\n\t}\n\n\t_extend_list_user(){\n\t\tdocument.getElementById('lobby').style.justifyContent = 'start';\n\n\t\tthis.lobbyTitle.setAttribute('list_extand', 'true');\n\t\tthis.lobbySelectorContainer.setAttribute('list_extand', 'true');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.listUserContainer.style.display = 'block';\n\t\t\tthis.btnContainer.style.display = 'flex';\n\t\t}, 100);\n\t}\n\n\t_changeButtonDisplay(buttonDisplay){\n\t\tthis.btnContainer.setAttribute('action', 'hide');\n\t\tsetTimeout(() => {\n\t\t\tthis.btnContainer.setAttribute('button_display', buttonDisplay);\n\t\t\tthis.btnContainer.setAttribute('action', 'show');\n\t\t}, 200);\n\t}\n\n\t_selectUser(e){\n\t\tlet userSelected = e.target;\n\t\tfor(let li of document.getElementsByClassName('list-user-item')){\n\t\t\tli.classList.remove('selected');\n\t\t}\n\t\tuserSelected.classList.add('selected');\n\n\t\tthis.btnContainer.setAttribute('button_display', 'play');\n\t\tthis.btnContainer.setAttribute('action', 'show');\n\t}\n\n\tremoveLobby(){\n\t\tthis.lobbyContainer.setAttribute('action', 'hide');\n\t\tsetTimeout(() => {\n\t\t\tthis.lobbyContainer.style.display = 'none';\n\t\t}, 500);\n\t\tthis.removeGameRequest();\n\t}\n\n\tshowLobby(){\n\t\tthis.lobbyContainer.style.display = 'block';\n\t\tthis.lobbyContainer.setAttribute('action', 'show');\n\t\tthis.btnContainer.style.display = 'none';\n\t\tthis.btnContainer.setAttribute('action', 'hide');\n\n\t\tthis.lobbyTitle.setAttribute('list_extand', 'false');\n\t\tthis.lobbySelectorContainer.setAttribute('list_extand', 'false');\n\t\tthis.listUserContainer.style.display = 'none';\n\n\t\tfor(let li of document.getElementsByClassName('list-user-item')){\n\t\t\tli.classList.remove('selected');\n\t\t}\n\t}\n\n\trefreshListUser(listUser){\n\t\tthis.listUser.innerHTML = '';\n\t\tfor(let user of listUser){\n\t\t\tif(user.name === controller.user.name){ continue; }\n\t\t\tlet li = document.createElement('li');\n\t\t\tli.classList.add('list-user-item');\n\t\t\tli.id = user.channel_id;\n\t\t\tli.textContent = user.name;\n\t\t\tli.addEventListener('click', this._selectUser.bind(this));\n\t\t\tthis.listUser.appendChild(li);\n\t\t}\n\t}\n\n\twaitForConfirmation(){\n\t\tthis.lobbyNotification.style.display = 'flex';\n\t\tthis.lobbyNotification.setAttribute('action', 'show');\n\t\tthis.lobbyNotification.setAttribute('animation', 'send_request');\n\t\tthis.lobbyNotification.querySelector('#notification-info').textContent = \"Waiting for a response\";\n\n\t\tthis._changeButtonDisplay('cancel');\n\t}\n\n\treceiveGameRequest(userName, userId){\n\t\tlet timeOut = 0;\n\t\tif(this.lobbySelectorContainer.getAttribute('list_extand') === 'false'){\n\t\t\tthis._extend_list_user();\n\t\t\ttimeOut = 200;\n\t\t}\n\t\tsetTimeout(() => {\n\t\t\tthis.lobbyNotification.style.display = 'flex';\n\t\t\tthis.lobbyNotification.setAttribute('action', 'show');\n\t\t\tthis.lobbyNotification.setAttribute('animation', 'receive_request');\n\t\t\tthis.lobbyNotification.querySelector('#notification-info').textContent = userName + ' challenges you!';\n\n\t\t\tthis._changeButtonDisplay('accept-decline');\n\t\t}, timeOut);\n\t}\n\n\tremoveGameRequest(){\n\t\tthis.lobbyNotification.setAttribute('action', 'hide');\n\t\tsetTimeout(() => {\n\t\t\tthis.lobbyNotification.style.display = 'none';\n\t\t}, 200);\n\t\tthis._changeButtonDisplay('play');\n\t}\n\n\tgetEnemySelected(){\n\t\tlet enemy = this.lobbyContainer.querySelector('.selected');\n\t\treturn {'id': enemy.id, 'name': enemy.textContent};\n\t}\n\n\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Lobby);\n\n\n//# sourceURL=webpack:///./static/js/view/components/Lobby.js?");

/***/ }),

/***/ "./static/js/view/components/Player.js":
/*!*********************************************!*\
  !*** ./static/js/view/components/Player.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Player{\n\tconstructor(){\n\t\tthis._init();\n\t}\n\n\t_init(){\n\t\tthis.playerContainer = document.getElementById('player-container');\n\t\tthis.passBtn = document.getElementById('pass-button');\n\n\t}\n\n\t_userPassEvent(){\n\t\tcontroller.userPassEvent();\n\t}\n\n\ttogglePassButton(isPlaying){\n\t\tif(isPlaying){\n\t\t\tthis.passBtn.setAttribute('active', 'true');\n\t\t\tthis.passBtn.addEventListener('click', this._userPassEvent);\n\t\t}else{\n\t\t\tthis.passBtn.setAttribute('active', 'false');\n\t\t\tthis.passBtn.removeEventListener('click', this._userPassEvent);\n\t\t}\n\t}\n\n\tshowPlayerContainer(show){\n\t\tif(show){\n\t\t\tthis.playerContainer.style.display = 'block';\n\t\t\tthis.playerContainer.setAttribute('show', 'true');\n\t\t}else{\n\t\t\tthis.playerContainer.setAttribute('show', 'false');\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.playerContainer.style.dislay = 'none';\n\t\t\t}, 400);\n\n\t\t}\n\t}\n\n\tsetPlayer(playerID, name, color, isPlaying){\n\t\tlet player = document.getElementById(playerID);\n\t\tplayer.setAttribute('color', color);\n\t\tplayer.setAttribute('isPlaying', isPlaying.toString());\n\t\tplayer.querySelector('.player-name').textContent = name;\n\t}\n\n\tsetIsPlaying(playerID, isPlaying){\n\t\tlet player = document.getElementById(playerID);\n\t\tplayer.setAttribute('isPlaying', isPlaying.toString());\n\t\tif(playerID === 'player-user'){\n\t\t\tthis.togglePassButton(isPlaying);\n\t\t}\n\t}\n\n\tsetEnemyPassed(hasPassed){\n\t\tlet e = document.getElementById('enemy-passed');\n\t\te.setAttribute('hasPassed', hasPassed.toString());\n\t}\n\n\tsetPassBtnText(text){\n\t\tthis.passBtn.textContent = text;\n\t}\n\n\taddTokenCounter(playerID){\n\t\tlet counter = document.querySelector('#' + playerID + ' .nb-token');\n\t\tcounter.textContent = parseInt(counter.textContent) + 1;\n\t}\n\n\t// Reset Functions\n\n\tresetPlayerContainer(){\n\t\tthis.showPlayerContainer(false);\n\t\tsetTimeout(() => {\n\t\t\tthis.resetPlayer('player-user');\n\t\t\tthis.resetPlayer('player-enemy');\n\t\t\tthis.resetTokenCounter();\n\t\t}, 400);\n\t}\n\n\tresetPlayer(playerID){\n\t\tlet player = document.getElementById(playerID);\n\t\tplayer.setAttribute('color', '');\n\t\tplayer.setAttribute('isPlaying', 'false');\n\t\tplayer.querySelector('.player-name').textContent = '';\n\t\tif(playerID === 'player-user'){\n\t\t\tthis.togglePassButton(false);\n\t\t\tthis.passBtn.textContent = 'Click to Pass';\n\t\t}else{\n\t\t\tplayer.querySelector('#enemy-passed').setAttribute('hasPassed', 'false');\n\t\t}\n\t}\n\n\tresetTokenCounter(){\n\t\tdocument.querySelector('#player-user .nb-token').textContent = 0;\n\t\tdocument.querySelector('#player-enemy .nb-token').textContent = 0;\n\t}\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Player);\n\n\n//# sourceURL=webpack:///./static/js/view/components/Player.js?");

/***/ })

/******/ });